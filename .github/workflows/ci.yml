name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
    inputs:
      verbose:
        description: "Set --verbose to get verbose build output"
        required: false
        default: 'true'

env:
  VERBOSE: ${{ github.events.input.verbose }}

jobs:
  cancel_previous_runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-20.04
    steps:
      - uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  # rustfmt:
  #   name: Rustfmt (${{ matrix.os }})
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-20.04]
  #       rust: [stable]
  #   env:
  #     RUST_BACKTRACE: full
  #     RUSTC_WRAPPER: sccache
  #     SCCACHE_CACHE_SIZE: 300M
  #     SCCACHE_DIR: /home/runner/.cache/sccache
  #     SCCACHE_IDLE_TIMEOUT: 0
  #     FLV_SOCKET_WAIT: 600
  #     RUSTV: ${{ matrix.rust }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install Rust ${{ matrix.rust }}
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: ${{ matrix.rust }}
  #         profile: minimal
  #         override: true
  #     - name: Check rustfmt
  #       run: cargo fmt --all -- --check

  tests:
    name: ${{ matrix.make.name }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        rust: [stable]
        make:
          - name: Clippy
            task: "clippy -- -D warnings"
          - name: Release
            task: "build --release"
        include:
          - os: ubuntu-20.04
            sccache-path: /home/runner/.cache/sccache
            sccache-bin: /home/runner/.cargo/bin/sccache
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: ${{ matrix.sccache-bin }}
      RUSTV: ${{ matrix.rust }}
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
      - uses: actions/checkout@v2
      - name: Install sccache (ubuntu-20.04)
        if: matrix.os == 'ubuntu-20.04'
        run: |
          rm -fr /home/runner/.local/bin/sccache
          rm -fr /tmp/cargo-*
          cargo install sccache
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          #profile: minimal
          override: true
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: ${{ matrix.sccache-path }}
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-
      - name: ${{ matrix.make.name }}
        run: cargo ${{ matrix.make.task }}
      - name: Print sccache stats
        run: ${{ matrix.sccache-bin }} --show-stats

