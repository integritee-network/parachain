name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      # With rustup's nice new toml format, we just need to run rustup show to install the toolchain
      # https://github.com/actions-rs/toolchain/issues/126#issuecomment-782989659
      - name: Setup Rust toolchain
        run: rustup show

      - name: Cache Rust Dependecies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            enclave/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release

      - name: Upload integritee-collator
        uses: actions/upload-artifact@v2
        with:
          name: integritee-collator-${{ github.sha }}
          path: target/release/integritee-collator

  fmt:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Setup Rust toolchain
        run: rustup show

      - name: fmt check
        # fail job on warnings with `-- --check`
        run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Setup Rust toolchain
        run: rustup show

      - name: clippy
        # fail job on warnings with `-- -D warnings`
        run: cargo clippy -- -D warnings

  create-artifacts:
    needs: build
    runs-on: ubuntu-20.04
    env:
      CHAIN_SPEC: ${{ matrix.chain }}-${{ matrix.config }}
    strategy:
      fail-fast: false
      matrix:
        chain: [shell]
        config: [kusama]

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: integritee-collator-${{ github.sha }}

      - name: 'Create binaries for artifacts'
        # Note: there is no way to pass the parachain-id to the `build-spec` cmd, which which imposes to set
        # `DEFAULT_PARA_ID=2015` in the `polkadot-parachains/command`.
        run: |
          chmod +x ./integritee-collator
          ./integritee-collator export-genesis-state --chain ${{ env.CHAIN_SPEC }} --parachain-id 2015 >  ${{ env.CHAIN_SPEC }}.state
          ./integritee-collator build-spec --chain ${{ env.CHAIN_SPEC }} --disable-default-bootnode --raw > ${{ env.CHAIN_SPEC }}.json


      - name: Compute file metadata
        id: vars
        run: |
          sha256sum ${{ env.CHAIN_SPEC }}.state >> checksums.txt
          sha256sum ${{ env.CHAIN_SPEC }}.json >> checksums.txt

      - name: Upload ${{ env.CHAIN_SPEC }} Files
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.CHAIN_SPEC }}-${{ github.sha }}
          path: |
            checksums.txt
            ${{ env.CHAIN_SPEC }}.state
            ${{ env.CHAIN_SPEC }}.json
