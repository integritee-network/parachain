
//! Autogenerated weights for `pallet_collective`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-05-11, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("integritee-rococo-local-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/integritee-collator
// benchmark
// pallet
// --chain=integritee-rococo-local-dev
// --steps=50
// --repeat=20
// --pallet=pallet_collective
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./polkadot-parachains/integritee-runtime/src/weights/pallet_collective.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_collective`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_collective::WeightInfo for WeightInfo<T> {
	// Storage: Council Members (r:1 w:1)
	// Storage: Council Proposals (r:1 w:0)
	// Storage: Council Voting (r:100 w:100)
	// Storage: Council Prime (r:0 w:1)
	fn set_members(m: u32, _n: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(0)
			// Standard Error: 134_000
			.saturating_add(Weight::from_ref_time(17_813_000).saturating_mul(m.into()))
			// Standard Error: 134_000
			.saturating_add(Weight::from_ref_time(38_252_000).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().reads(Weight::from_ref_time(1).saturating_mul(p.into()).ref_time()))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(T::DbWeight::get().writes(Weight::from_ref_time(1).saturating_mul(p.into()).ref_time()))
	}
	// Storage: Council Members (r:1 w:0)
	fn execute(_b: u32, m: u32, ) -> Weight {
		Weight::from_ref_time(77_486_000)
			// Standard Error: 7_000
			.saturating_add(Weight::from_ref_time(94_000).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	// Storage: Council Members (r:1 w:0)
	// Storage: Council ProposalOf (r:1 w:0)
	fn propose_execute(b: u32, m: u32, ) -> Weight {
		Weight::from_ref_time(60_805_000)
			// Standard Error: 0
			.saturating_add(Weight::from_ref_time(7_000).saturating_mul(b.into()))
			// Standard Error: 7_000
			.saturating_add(Weight::from_ref_time(146_000).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(2))
	}
	// Storage: Council Members (r:1 w:0)
	// Storage: Council ProposalOf (r:1 w:1)
	// Storage: Council Proposals (r:1 w:1)
	// Storage: Council ProposalCount (r:1 w:1)
	// Storage: Council Voting (r:0 w:1)
	fn propose_proposed(b: u32, m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(73_221_000)
			// Standard Error: 1_000
			.saturating_add(Weight::from_ref_time(18_000).saturating_mul(b.into()))
			// Standard Error: 13_000
			.saturating_add(Weight::from_ref_time(127_000).saturating_mul(m.into()))
			// Standard Error: 12_000
			.saturating_add(Weight::from_ref_time(715_000).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: Council Members (r:1 w:0)
	// Storage: Council Voting (r:1 w:1)
	fn vote(m: u32, ) -> Weight {
		Weight::from_ref_time(109_367_000)
			// Standard Error: 16_000
			.saturating_add(Weight::from_ref_time(148_000).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Council Voting (r:1 w:1)
	// Storage: Council Members (r:1 w:0)
	// Storage: Council Proposals (r:1 w:1)
	// Storage: Council ProposalOf (r:0 w:1)
	fn close_early_disapproved(m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(93_407_000)
			// Standard Error: 13_000
			.saturating_add(Weight::from_ref_time(218_000).saturating_mul(m.into()))
			// Standard Error: 12_000
			.saturating_add(Weight::from_ref_time(470_000).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Council Voting (r:1 w:1)
	// Storage: Council Members (r:1 w:0)
	// Storage: Council ProposalOf (r:1 w:1)
	// Storage: Council Proposals (r:1 w:1)
	fn close_early_approved(b: u32, m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(100_328_000)
			// Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(28_000).saturating_mul(b.into()))
			// Standard Error: 18_000
			.saturating_add(Weight::from_ref_time(191_000).saturating_mul(m.into()))
			// Standard Error: 17_000
			.saturating_add(Weight::from_ref_time(756_000).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Council Voting (r:1 w:1)
	// Storage: Council Members (r:1 w:0)
	// Storage: Council Prime (r:1 w:0)
	// Storage: Council Proposals (r:1 w:1)
	// Storage: Council ProposalOf (r:0 w:1)
	fn close_disapproved(m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(104_976_000)
			// Standard Error: 15_000
			.saturating_add(Weight::from_ref_time(271_000).saturating_mul(m.into()))
			// Standard Error: 14_000
			.saturating_add(Weight::from_ref_time(484_000).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Council Voting (r:1 w:1)
	// Storage: Council Members (r:1 w:0)
	// Storage: Council Prime (r:1 w:0)
	// Storage: Council ProposalOf (r:1 w:1)
	// Storage: Council Proposals (r:1 w:1)
	fn close_approved(b: u32, m: u32, p: u32, ) -> Weight {
		Weight::from_ref_time(133_170_000)
			// Standard Error: 2_000
			.saturating_add(Weight::from_ref_time(20_000).saturating_mul(b.into()))
			// Standard Error: 19_000
			.saturating_add(Weight::from_ref_time(112_000).saturating_mul(m.into()))
			// Standard Error: 18_000
			.saturating_add(Weight::from_ref_time(636_000).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Council Proposals (r:1 w:1)
	// Storage: Council Voting (r:0 w:1)
	// Storage: Council ProposalOf (r:0 w:1)
	fn disapprove_proposal(p: u32, ) -> Weight {
		Weight::from_ref_time(51_161_000)
			// Standard Error: 15_000
			.saturating_add(Weight::from_ref_time(805_000).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(3))
	}
}
