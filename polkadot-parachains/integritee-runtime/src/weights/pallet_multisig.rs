
//! Autogenerated weights for `pallet_multisig`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-05, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("integritee-rococo-local-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/integritee-collator
// benchmark
// --chain=integritee-rococo-local-dev
// --steps=50
// --repeat=20
// --pallet=pallet_multisig
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./polkadot-parachains/integritee-runtime/src/weights/pallet_multisig.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_multisig`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_multisig::WeightInfo for WeightInfo<T> {
	// Storage: Migration Status (r:1 w:0)
	fn as_multi_threshold_1(_z: u32, ) -> Weight {
		Weight::from_ref_time(26_559_000)
			.saturating_add(T::DbWeight::get().reads(1))
	}
	// Storage: Multisig Multisigs (r:1 w:1)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	fn as_multi_create(s: u32, z: u32, ) -> Weight {
		Weight::from_ref_time(39_005_000)
			// Standard Error: 579_000
			.saturating_add(Weight::from_ref_time(8_311_000).saturating_mul(s.into()))
			// Standard Error: 0
			.saturating_add(Weight::from_ref_time(6_000).saturating_mul(z.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Multisig Multisigs (r:1 w:1)
	// Storage: Multisig Calls (r:1 w:1)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	fn as_multi_create_store(s: u32, z: u32, ) -> Weight {
		Weight::from_ref_time(149_254_000)
			// Standard Error: 608_000
			.saturating_add(Weight::from_ref_time(306_000).saturating_mul(s.into()))
			// Standard Error: 0
			.saturating_add(Weight::from_ref_time(3_000).saturating_mul(z.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Multisig Multisigs (r:1 w:1)
	fn as_multi_approve(_s: u32, z: u32, ) -> Weight {
		Weight::from_ref_time(86_476_000)
			// Standard Error: 0
			.saturating_add(Weight::from_ref_time(4_000).saturating_mul(z.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Multisig Multisigs (r:1 w:1)
	// Storage: Multisig Calls (r:1 w:1)
	fn as_multi_approve_store(s: u32, z: u32, ) -> Weight {
		Weight::from_ref_time(91_141_000)
			// Standard Error: 677_000
			.saturating_add(Weight::from_ref_time(6_821_000).saturating_mul(s.into()))
			// Standard Error: 0
			.saturating_add(Weight::from_ref_time(5_000).saturating_mul(z.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Multisig Multisigs (r:1 w:1)
	// Storage: Multisig Calls (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Migration Status (r:1 w:0)
	fn as_multi_complete(s: u32, z: u32, ) -> Weight {
		Weight::from_ref_time(159_982_000)
			// Standard Error: 882_000
			.saturating_add(Weight::from_ref_time(4_322_000).saturating_mul(s.into()))
			// Standard Error: 0
			.saturating_add(Weight::from_ref_time(6_000).saturating_mul(z.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Multisig Multisigs (r:1 w:1)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	fn approve_as_multi_create(s: u32, ) -> Weight {
		Weight::from_ref_time(99_826_000)
			// Standard Error: 477_000
			.saturating_add(Weight::from_ref_time(802_000).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Multisig Multisigs (r:1 w:1)
	// Storage: Multisig Calls (r:1 w:0)
	fn approve_as_multi_approve(s: u32, ) -> Weight {
		Weight::from_ref_time(65_356_000)
			// Standard Error: 242_000
			.saturating_add(Weight::from_ref_time(136_000).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Multisig Multisigs (r:1 w:1)
	// Storage: Multisig Calls (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Migration Status (r:1 w:0)
	fn approve_as_multi_complete(_s: u32, ) -> Weight {
		Weight::from_ref_time(252_161_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Multisig Multisigs (r:1 w:1)
	// Storage: Multisig Calls (r:1 w:1)
	fn cancel_as_multi(_s: u32, ) -> Weight {
		Weight::from_ref_time(151_312_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
